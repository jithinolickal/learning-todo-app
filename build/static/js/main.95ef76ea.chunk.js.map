{"version":3,"sources":["components/AddTodo.jsx","components/TodoItem.jsx","components/TodoList.jsx","App.js","reportWebVitals.js","index.js"],"names":["AddTodo","props","useState","setTodo","className","span","name","layout","onFinish","values","handleTodo","align","gutter","xs","order","sm","md","lg","Item","label","xl","xxl","rows","offset","htmlType","TodoItem","useContext","TodoContext","handleDelete","todoList","setTodoList","handleComplete","justify","todo","isComplete","taskName","taskDesc","onClick","id","hidden","icon","faCheckDouble","DeleteFilled","TodoList","map","key","createContext","App","Provider","value","filter","todoId","selectedindex","findIndex","newTodoList","Date","now","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95ef76ea.chunk.js","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\nimport { Col, Form, Input, Row } from \"antd\";\r\nimport Button from \"antd/es/button\";\r\nimport TextArea from \"rc-textarea\";\r\n\r\nconst AddTodo = (props) => {\r\n  const [todo, setTodo] = useState({});\r\n\r\n  const handleAdd = (values) => {\r\n    setTodo(values);\r\n    props.handleTodo(values);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Row className=\"add-todo-container\">\r\n        <Col span={24}>\r\n          <Form\r\n            name=\"form\"\r\n            layout=\"vertical\"\r\n            className=\"add-todo-form\"\r\n            onFinish={handleAdd}\r\n          >\r\n            <Row align=\"bottom\" gutter={[8, 16]}>\r\n              <Col\r\n                xs={{ span: 24, order: 2 }}\r\n                sm={{ span: 24, order: 2 }}\r\n                md={{ span: 24, order: 2 }}\r\n                lg={{ span: 6, order: 1 }}\r\n              >\r\n                <Form.Item label=\"Enter Task Name\" name=\"taskName\">\r\n                  <Input className=\"text-box\"></Input>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col\r\n                xs={{ span: 24, order: 3 }}\r\n                sm={{ span: 24, order: 3 }}\r\n                md={{ span: 24, order: 3 }}\r\n                lg={{ span: 0 }}\r\n                xl={{ span: 0 }}\r\n                xxl={{ span: 0 }}\r\n              >\r\n                <Form.Item label=\"Enter Task description\" name=\"taskDesc\">\r\n                  <TextArea className=\"text-box\" rows={4}></TextArea>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col\r\n                lg={{ span: 12, order: 2, offset: 1 }}\r\n                xs={{ span: 0 }}\r\n                sm={{ span: 0 }}\r\n                md={{ span: 0 }}\r\n              >\r\n                <Form.Item label=\"Enter Task description\" name=\"taskDesc\">\r\n                  <Input className=\"text-box\"></Input>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col\r\n                xs={{ span: 24, order: 1 }}\r\n                sm={{ span: 24, order: 1 }}\r\n                md={{ span: 24, order: 1 }}\r\n                lg={{ span: 3, order: 3, offset: 1 }}\r\n              >\r\n                <Form.Item>\r\n                  <Button htmlType=\"submit\" className=\"add-btn\">\r\n                    ADD\r\n                  </Button>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddTodo;\r\n","import React, { useContext } from \"react\";\r\nimport { Col, Row, Button } from \"antd\";\r\nimport { DeleteFilled } from \"@ant-design/icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheckDouble } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useState } from \"react/cjs/react.development\";\r\nimport { TodoContext } from \"../App\";\r\n\r\nconst TodoItem = (props) => {\r\n  const { todoList, setTodoList, handleDelete, handleComplete } = useContext(TodoContext);\r\n\r\n  const localHandleDelete = () => {\r\n    handleDelete(props.todo.id);\r\n  };\r\n  const localHandleComplete = () => {\r\n    handleComplete(props.todo.id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo-item\">\r\n      <Row align=\"middle\">\r\n        <Col xs={20} sm={20} md={20} lg={18} xl={18} xxl={20}>\r\n          <Row justify=\"start\">\r\n            <Col>\r\n              <h3\r\n                className={\r\n                  props.todo.isComplete\r\n                    ? \"complete-todo-title item-title\"\r\n                    : \"item-title\"\r\n                }\r\n              >\r\n                {props.todo?.taskName}\r\n              </h3>\r\n            </Col>\r\n          </Row>\r\n          <Row justify=\"start\">\r\n            <Col>\r\n              <span\r\n                className={\r\n                  props.todo.isComplete\r\n                    ? \"complete-todo-desc item-desc\"\r\n                    : \"item-desc\"\r\n                }\r\n              >\r\n                {props.todo?.taskDesc}\r\n              </span>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={4} sm={4} md={4} lg={6} xl={6} xxl={4}>\r\n          <Row gutter={[8, 8]} justify=\"end\">\r\n            <Col>\r\n              <Button\r\n                className=\"icon-red\"\r\n                onClick={localHandleComplete}\r\n                hidden={props.todo.isComplete}\r\n              >\r\n                <FontAwesomeIcon icon={faCheckDouble} />\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Button className=\"icon-red\" onClick={localHandleDelete}>\r\n                <DeleteFilled />\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import { TodoContext } from \"../App\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst TodoList = (props) => {\r\n  const { todoList } = useContext(TodoContext);\r\n\r\n  return (\r\n    <>\r\n      {todoList.map((todo, key) => {\r\n        return <TodoItem key={todo.id} todo={todo} />;\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { createContext, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport AddTodo from \"./components/AddTodo\";\r\nimport TodoList from \"./components/TodoList\";\r\nimport { Row, Col } from \"antd\";\r\n\r\nexport const TodoContext = createContext();\r\n\r\nfunction App() {\r\n  const [todoList, setTodoList] = useState([]);\r\n  const [selectedValue, setSelectedValue] = useState();\r\n\r\n  const handleTodo = (value) => {\r\n    setTodoList([...todoList, { ...value, id: Date.now(), isComplete: false }]);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    setTodoList(todoList.filter((todo) => todo.id != id));\r\n  };\r\n\r\n  const handleComplete = (todoId) => {\r\n    let selectedindex = todoList.findIndex((todo) => todo.id == todoId);\r\n    let newTodoList = [...todoList];\r\n    newTodoList[selectedindex].isComplete = true;\r\n    setTodoList(newTodoList);\r\n  };\r\n  \r\n  // Old code for reference\r\n  const old_Complete = (todo1) => {\r\n    let selectedindex = todoList.findIndex((todo) => todo.id == todo1.id);\r\n    let newTodoList = [...todoList];\r\n    newTodoList[selectedindex] = {\r\n      ...newTodoList[selectedindex],\r\n      isComplete: todo1.isComplete,\r\n    };\r\n    setTodoList(newTodoList);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <p style={{ color: \"white\" }}>{JSON.stringify(todoList)}</p> */}\r\n      <div className=\"app-title\">TO DO</div>\r\n      <Row align=\"middle\" className=\"page-center\">\r\n        <Col span={12} offset={6}>\r\n          <TodoContext.Provider\r\n            value={{ todoList, setTodoList, handleDelete, handleComplete }}\r\n          >\r\n            <AddTodo handleTodo={handleTodo} />\r\n            <TodoList />\r\n          </TodoContext.Provider>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport \"antd/dist/antd.css\"; \r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}